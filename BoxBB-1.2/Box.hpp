/***************************************************************************
                          Box.h  -  description
                             -------------------
    begin                : May 2000
    copyright            : (C) 2000 by L.G. Casado
    email                : leo@ual.es
 ***************************************************************************

Purpose: Definition of the container BOX.

Class BOX:
Stores:
      X      : the search region,
      FX     : F(X) of the current Box, father Box and grandfather Box.
      GX     : G(X) of the current box, before evaluate fgEvalG, the father G(X).
      M      : Flag inditating if this box is monotonous.
      NBox   : Number that identified the Box, for drawing purposes.

Functions:
  BOX() : constructor.
  BOX(int n) : constructor. int determines the dimension of the Box.
  BOX (const ivector & IV): constructor. The search region is
    initialized with ivector.
  BOX (const BOX & B) : copy constructor.
  ~BOX() : destructor.

  Dimension (const BOX & B) : Return the Box dimension.
  Resize (BOX &, int n) : To change the dimension of the Box.
  Clear (BOX & B) : Set X, FX and M to 0.
  Evalpf (const BOX & B, int Index, real BetterUbf): Calculate Pf value using
    BetterUbf anf FX(Index);
  Draw (const PBOX & B, const ivector & XLim, intn , PCHAR color):
    Generates an output to draw the box. The output is a imput to escala.tcl,
    a separate program.
  UnDraw (BOX & B) : To remove the box from the graphical output
      generated by escala.tcl.
  operator << (ostream & os, const BOX & B): Overloaded output operator.

*******************************************************************************/

#ifndef __BOX__
#define __BOX__

namespace ub = boost::numeric::ublas;
typedef kv::interval<double> itv; // interval
typedef ub::vector<itv> itvV;     // interval vector

using namespace std;

/*---------------------------------------------------------------------------*/
class BOX
{
public:
  itvV X;
  itv FX;
  itvV GX;
  bool M;
  int NBox;
  double Width; // width of the larger itv in itvV.
  bool IsMon;

public:
  BOX();
  BOX(int n);
  BOX(const itvV &IV);
  BOX(const BOX &B);
  ~BOX();
  void Divides(BOX &BoXG1, BOX &BoXG2);
  bool ReduceBox(ConstData &CtD);
  void SizeBox(const INT NDim);
  void ReplaceBox(const BOX &B);
  void DrawBox(ConstData &CtD, bool Fill, PCHARCt color);
  friend int Dimension(const BOX &);
  friend ostream &operator<<(ostream &os, const BOX &B);
};

typedef BOX *PBOX;
typedef PBOX *PPBOX;

#endif /*__BOX__*/
